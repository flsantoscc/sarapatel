/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.analysis;

import sarapatel.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAAprogramaPrograma(AAprogramaPrograma node);
    void caseADecVar(ADecVar node);
    void caseADecConst(ADecConst node);
    void caseADecVarDecVarOrDecConst(ADecVarDecVarOrDecConst node);
    void caseADecConstDecVarOrDecConst(ADecConstDecVarOrDecConst node);
    void caseABaseTipo(ABaseTipo node);
    void caseAArrTipo(AArrTipo node);
    void caseAIntTipoBase(AIntTipoBase node);
    void caseABoolTipoBase(ABoolTipoBase node);
    void caseARealTipoBase(ARealTipoBase node);
    void caseACadeiaTipoBase(ACadeiaTipoBase node);
    void caseAIdAtribuicao(AIdAtribuicao node);
    void caseADecProcDecProcOrDecFunc(ADecProcDecProcOrDecFunc node);
    void caseADecFuncDecProcOrDecFunc(ADecFuncDecProcOrDecFunc node);
    void caseADecProc(ADecProc node);
    void caseADecFunc(ADecFunc node);
    void caseAParametro(AParametro node);
    void caseAParTipoParam(AParTipoParam node);
    void caseAArrParTipoParam(AArrParTipoParam node);
    void caseABaseTipoFunc(ABaseTipoFunc node);
    void caseAArrTipoFunc(AArrTipoFunc node);
    void caseASeComando(ASeComando node);
    void caseASeSenaoComando(ASeSenaoComando node);
    void caseAEnquantoComando(AEnquantoComando node);
    void caseAIdAtribuicaoComando(AIdAtribuicaoComando node);
    void caseAProcComando(AProcComando node);
    void caseADecVarOrDecConstComando(ADecVarOrDecConstComando node);
    void caseASeComandoAux(ASeComandoAux node);
    void caseAEnquantoComandoAux(AEnquantoComandoAux node);
    void caseAProcComandoAux(AProcComandoAux node);
    void caseAIdAtribuicaoComandoAux(AIdAtribuicaoComandoAux node);
    void caseADecVarOrDecConstComandoAux(ADecVarOrDecConstComandoAux node);
    void caseAIdValor(AIdValor node);
    void caseAExpValor(AExpValor node);
    void caseAIntExp(AIntExp node);
    void caseABoolExp(ABoolExp node);
    void caseARealExp(ARealExp node);
    void caseACadeiaExp(ACadeiaExp node);
    void caseAValorExp(AValorExp node);
    void caseACFuncExp(ACFuncExp node);
    void caseAArrayCExp(AArrayCExp node);
    void caseAIncrementoExp(AIncrementoExp node);
    void caseADecrementoExp(ADecrementoExp node);
    void caseASeExpExp(ASeExpExp node);
    void caseASomaExp(ASomaExp node);
    void caseAMinusExp(AMinusExp node);
    void caseAMultExp(AMultExp node);
    void caseADivExp(ADivExp node);
    void caseAModExp(AModExp node);
    void caseAEqualExp(AEqualExp node);
    void caseAGreaterEqExp(AGreaterEqExp node);
    void caseAGreaterExp(AGreaterExp node);
    void caseAEExp(AEExp node);
    void caseAOuExp(AOuExp node);
    void caseAParExp(AParExp node);
    void caseANegacaoExp(ANegacaoExp node);
    void caseABExpExp(ABExpExp node);
    void caseABDecConstExpExp(ABDecConstExpExp node);
    void caseABlocoExpressoes(ABlocoExpressoes node);
    void caseAArrayComp(AArrayComp node);
    void caseAChamadaFuncao(AChamadaFuncao node);
    void caseAChamadaProcedimento(AChamadaProcedimento node);

    void caseTVar(TVar node);
    void caseTConst(TConst node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTEnquanto(TEnquanto node);
    void caseTFuncao(TFuncao node);
    void caseTProcedimento(TProcedimento node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTNegacao(TNegacao node);
    void caseTComece(TComece node);
    void caseTTermine(TTermine node);
    void caseTIntKw(TIntKw node);
    void caseTFloatKw(TFloatKw node);
    void caseTStringKw(TStringKw node);
    void caseTBoolKw(TBoolKw node);
    void caseTInt(TInt node);
    void caseTFloat(TFloat node);
    void caseTString(TString node);
    void caseTBool(TBool node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTStar(TStar node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTGreater(TGreater node);
    void caseTGreaterEq(TGreaterEq node);
    void caseTEqual(TEqual node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBrkt(TLBrkt node);
    void caseTRBrkt(TRBrkt node);
    void caseTDd(TDd node);
    void caseTMainInit(TMainInit node);
    void caseTSemi(TSemi node);
    void caseTPipe(TPipe node);
    void caseTColon(TColon node);
    void caseTId(TId node);
    void caseTComment(TComment node);
    void caseTMlComment(TMlComment node);
    void caseTBlank(TBlank node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);

    void caseAAchamadafuncao1ChamadaFuncao(AAchamadafuncao1ChamadaFuncao node);
    void caseAAchamadafuncao2ChamadaFuncao(AAchamadafuncao2ChamadaFuncao node);
    void caseAAchamadafuncaoChamadaFuncao(AAchamadafuncaoChamadaFuncao node);
    void caseAAchamadaprocedimento1ChamadaProcedimento(AAchamadaprocedimento1ChamadaProcedimento node);
    void caseAAchamadaprocedimento2ChamadaProcedimento(AAchamadaprocedimento2ChamadaProcedimento node);
    void caseAAchamadaprocedimentoChamadaProcedimento(AAchamadaprocedimentoChamadaProcedimento node);
    void caseAAdecfunc1DecFunc(AAdecfunc1DecFunc node);
    void caseAAdecfunc2DecFunc(AAdecfunc2DecFunc node);
    void caseAAdecfuncDecFunc(AAdecfuncDecFunc node);
    void caseAAdecproc1DecProc(AAdecproc1DecProc node);
    void caseAAdecproc2DecProc(AAdecproc2DecProc node);
    void caseAAdecproc3DecProc(AAdecproc3DecProc node);
    void caseAAdecproc4DecProc(AAdecproc4DecProc node);
    void caseAAdecprocDecProc(AAdecprocDecProc node);
    void caseAAdicaoRelacao(AAdicaoRelacao node);
    void caseAAexplist1ExpList(AAexplist1ExpList node);
    void caseAAexplist2ExpList(AAexplist2ExpList node);
    void caseAAprograma1Programa(AAprograma1Programa node);
    void caseAAprograma2Programa(AAprograma2Programa node);
    void caseAAprograma3Programa(AAprograma3Programa node);
    void caseAAprograma4Programa(AAprograma4Programa node);
    void caseAAprograma5Programa(AAprograma5Programa node);
    void caseAAprograma6Programa(AAprograma6Programa node);
    void caseAAprograma7Programa(AAprograma7Programa node);
    void caseAAprograma8Programa(AAprograma8Programa node);
    void caseAArrArrAttr(AArrArrAttr node);
    void caseAAttr(AAttr node);
    void caseAAttrComando(AAttrComando node);
    void caseAAttrComandoAux(AAttrComandoAux node);
    void caseAAttrComandoComando(AAttrComandoComando node);
    void caseAAttrComandoComandoAux(AAttrComandoComandoAux node);
    void caseABDecConstExpBlocoExpressoes(ABDecConstExpBlocoExpressoes node);

    void caseABExpBlocoExpressoes(ABExpBlocoExpressoes node);
    void caseABlocoComando(ABlocoComando node);
    void caseABlocoComandoAux(ABlocoComandoAux node);
    void caseABlocoConstComando(ABlocoConstComando node);
    void caseABlocoConstComandoAux(ABlocoConstComandoAux node);
    void caseABlocoVarComando(ABlocoVarComando node);
    void caseABlocoVarComandoAux(ABlocoVarComandoAux node);
    void caseABoolTipoKw(ABoolTipoKw node);
    void caseACadeiaTipoKw(ACadeiaTipoKw node);
    void caseAComandoExp(AComandoExp node);
    void caseAConjDisjuncao(AConjDisjuncao node);
    void caseAConstDecVarOrConst(AConstDecVarOrConst node);
    void caseAConstSubBloco(AConstSubBloco node);
    void caseADecConstDecVarDecConst(ADecConstDecVarDecConst node);
    void caseADecVar1DecVar(ADecVar1DecVar node);
    void caseADecVar2DecVar(ADecVar2DecVar node);
    void caseADecVarDecConstComando(ADecVarDecConstComando node);
    void caseADecVarDecConstComandoAux(ADecVarDecConstComandoAux node);
    void caseADecVarDecVar(ADecVarDecVar node);
    void caseADecVarDecVarDecConst(ADecVarDecVarDecConst node);
    void caseADisjCondicao(ADisjCondicao node);
    void caseADivProduto(ADivProduto node);
    void caseAEConjuncao(AEConjuncao node);
    void caseAEqualRelacao(AEqualRelacao node);
    void caseAExpList(AExpList node);
    void caseAExpRelUnaria(AExpRelUnaria node);
    void caseAFuncDecProcOrFunc(AFuncDecProcOrFunc node);
    void caseAGreaterEqRelacao(AGreaterEqRelacao node);
    void caseAGreaterRelacao(AGreaterRelacao node);
    void caseAIdArrAttr(AIdArrAttr node);
    void caseAIdAtrIdDec(AIdAtrIdDec node);
    void caseAIdIdDec(AIdIdDec node);
    void caseAIntTipoKw(AIntTipoKw node);
    void caseAMaisRelUnaria(AMaisRelUnaria node);
    void caseAMenosRelUnaria(AMenosRelUnaria node);
    void caseAMinusAdicao(AMinusAdicao node);
    void caseAModProduto(AModProduto node);
    void caseAMultipleDecConstList(AMultipleDecConstList node);
    void caseAMultProduto(AMultProduto node);
    void caseANegacaoRelUnaria(ANegacaoRelUnaria node);
    void caseAOuDisjuncao(AOuDisjuncao node);
    void caseAParam(AParam node);
    void caseAPipeExp(APipeExp node);
    void caseAPipeExpPipeExp(APipeExpPipeExp node);
    void caseAPipeParam(APipeParam node);
    void caseAProcDecProcOrFunc(AProcDecProcOrFunc node);
    void caseAProdutoAdicao(AProdutoAdicao node);
    void caseAPrograma(APrograma node);
    void caseARealTipoKw(ARealTipoKw node);
    void caseARelConjuncao(ARelConjuncao node);
    void caseARelUnariaProduto(ARelUnariaProduto node);
    void caseASeExpCondicao(ASeExpCondicao node);
    void caseASingleDecConstList(ASingleDecConstList node);
    void caseASomaAdicao(ASomaAdicao node);
    void caseAVarDecVarOrConst(AVarDecVarOrConst node);
    void caseAVarSubBloco(AVarSubBloco node);





}
