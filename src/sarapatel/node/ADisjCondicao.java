/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class ADisjCondicao extends PCondicao
{
    private PDisjuncao _disjuncao_;

    public ADisjCondicao()
    {
        // Constructor
    }

    public ADisjCondicao(
        @SuppressWarnings("hiding") PDisjuncao _disjuncao_)
    {
        // Constructor
        setDisjuncao(_disjuncao_);

    }

    @Override
    public Object clone()
    {
        return new ADisjCondicao(
            cloneNode(this._disjuncao_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADisjCondicao(this);
    }

    public PDisjuncao getDisjuncao()
    {
        return this._disjuncao_;
    }

    public void setDisjuncao(PDisjuncao node)
    {
        if(this._disjuncao_ != null)
        {
            this._disjuncao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._disjuncao_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._disjuncao_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._disjuncao_ == child)
        {
            this._disjuncao_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._disjuncao_ == oldChild)
        {
            setDisjuncao((PDisjuncao) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
