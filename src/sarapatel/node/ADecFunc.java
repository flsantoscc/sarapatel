/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class ADecFunc extends PDecFunc
{
    private TFuncao _funcao_;
    private TColon _colon_;
    private PTipoFunc _tipoFunc_;
    private TId _id_;
    private TLPar _lPar_;
    private PParam _param_;
    private TRPar _rPar_;
    private PExp _exp_;

    public ADecFunc()
    {
        // Constructor
    }

    public ADecFunc(
        @SuppressWarnings("hiding") TFuncao _funcao_,
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") PTipoFunc _tipoFunc_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TLPar _lPar_,
        @SuppressWarnings("hiding") PParam _param_,
        @SuppressWarnings("hiding") TRPar _rPar_,
        @SuppressWarnings("hiding") PExp _exp_)
    {
        // Constructor
        setFuncao(_funcao_);

        setColon(_colon_);

        setTipoFunc(_tipoFunc_);

        setId(_id_);

        setLPar(_lPar_);

        setParam(_param_);

        setRPar(_rPar_);

        setExp(_exp_);

    }

    @Override
    public Object clone()
    {
        return new ADecFunc(
            cloneNode(this._funcao_),
            cloneNode(this._colon_),
            cloneNode(this._tipoFunc_),
            cloneNode(this._id_),
            cloneNode(this._lPar_),
            cloneNode(this._param_),
            cloneNode(this._rPar_),
            cloneNode(this._exp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecFunc(this);
    }

    public TFuncao getFuncao()
    {
        return this._funcao_;
    }

    public void setFuncao(TFuncao node)
    {
        if(this._funcao_ != null)
        {
            this._funcao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._funcao_ = node;
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public PTipoFunc getTipoFunc()
    {
        return this._tipoFunc_;
    }

    public void setTipoFunc(PTipoFunc node)
    {
        if(this._tipoFunc_ != null)
        {
            this._tipoFunc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipoFunc_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TLPar getLPar()
    {
        return this._lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(this._lPar_ != null)
        {
            this._lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lPar_ = node;
    }

    public PParam getParam()
    {
        return this._param_;
    }

    public void setParam(PParam node)
    {
        if(this._param_ != null)
        {
            this._param_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._param_ = node;
    }

    public TRPar getRPar()
    {
        return this._rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(this._rPar_ != null)
        {
            this._rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rPar_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._funcao_)
            + toString(this._colon_)
            + toString(this._tipoFunc_)
            + toString(this._id_)
            + toString(this._lPar_)
            + toString(this._param_)
            + toString(this._rPar_)
            + toString(this._exp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._funcao_ == child)
        {
            this._funcao_ = null;
            return;
        }

        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._tipoFunc_ == child)
        {
            this._tipoFunc_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._lPar_ == child)
        {
            this._lPar_ = null;
            return;
        }

        if(this._param_ == child)
        {
            this._param_ = null;
            return;
        }

        if(this._rPar_ == child)
        {
            this._rPar_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._funcao_ == oldChild)
        {
            setFuncao((TFuncao) newChild);
            return;
        }

        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._tipoFunc_ == oldChild)
        {
            setTipoFunc((PTipoFunc) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(this._param_ == oldChild)
        {
            setParam((PParam) newChild);
            return;
        }

        if(this._rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
