/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class ASubtractiveExpSubtractiveExp extends PSubtractiveExp
{
    private PAdditiveExp _additiveExp_;
    private TMinus _minus_;
    private PMultiplicativeExp _multiplicativeExp_;

    public ASubtractiveExpSubtractiveExp()
    {
        // Constructor
    }

    public ASubtractiveExpSubtractiveExp(
        @SuppressWarnings("hiding") PAdditiveExp _additiveExp_,
        @SuppressWarnings("hiding") TMinus _minus_,
        @SuppressWarnings("hiding") PMultiplicativeExp _multiplicativeExp_)
    {
        // Constructor
        setAdditiveExp(_additiveExp_);

        setMinus(_minus_);

        setMultiplicativeExp(_multiplicativeExp_);

    }

    @Override
    public Object clone()
    {
        return new ASubtractiveExpSubtractiveExp(
            cloneNode(this._additiveExp_),
            cloneNode(this._minus_),
            cloneNode(this._multiplicativeExp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASubtractiveExpSubtractiveExp(this);
    }

    public PAdditiveExp getAdditiveExp()
    {
        return this._additiveExp_;
    }

    public void setAdditiveExp(PAdditiveExp node)
    {
        if(this._additiveExp_ != null)
        {
            this._additiveExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._additiveExp_ = node;
    }

    public TMinus getMinus()
    {
        return this._minus_;
    }

    public void setMinus(TMinus node)
    {
        if(this._minus_ != null)
        {
            this._minus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._minus_ = node;
    }

    public PMultiplicativeExp getMultiplicativeExp()
    {
        return this._multiplicativeExp_;
    }

    public void setMultiplicativeExp(PMultiplicativeExp node)
    {
        if(this._multiplicativeExp_ != null)
        {
            this._multiplicativeExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multiplicativeExp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._additiveExp_)
            + toString(this._minus_)
            + toString(this._multiplicativeExp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._additiveExp_ == child)
        {
            this._additiveExp_ = null;
            return;
        }

        if(this._minus_ == child)
        {
            this._minus_ = null;
            return;
        }

        if(this._multiplicativeExp_ == child)
        {
            this._multiplicativeExp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._additiveExp_ == oldChild)
        {
            setAdditiveExp((PAdditiveExp) newChild);
            return;
        }

        if(this._minus_ == oldChild)
        {
            setMinus((TMinus) newChild);
            return;
        }

        if(this._multiplicativeExp_ == oldChild)
        {
            setMultiplicativeExp((PMultiplicativeExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
