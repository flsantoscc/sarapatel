/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AGreaterRelationalExp extends PRelationalExp
{
    private PRelationalExp _relationalExp_;
    private TGreater _greater_;
    private PAdditiveExp _additiveExp_;

    public AGreaterRelationalExp()
    {
        // Constructor
    }

    public AGreaterRelationalExp(
        @SuppressWarnings("hiding") PRelationalExp _relationalExp_,
        @SuppressWarnings("hiding") TGreater _greater_,
        @SuppressWarnings("hiding") PAdditiveExp _additiveExp_)
    {
        // Constructor
        setRelationalExp(_relationalExp_);

        setGreater(_greater_);

        setAdditiveExp(_additiveExp_);

    }

    @Override
    public Object clone()
    {
        return new AGreaterRelationalExp(
            cloneNode(this._relationalExp_),
            cloneNode(this._greater_),
            cloneNode(this._additiveExp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGreaterRelationalExp(this);
    }

    public PRelationalExp getRelationalExp()
    {
        return this._relationalExp_;
    }

    public void setRelationalExp(PRelationalExp node)
    {
        if(this._relationalExp_ != null)
        {
            this._relationalExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._relationalExp_ = node;
    }

    public TGreater getGreater()
    {
        return this._greater_;
    }

    public void setGreater(TGreater node)
    {
        if(this._greater_ != null)
        {
            this._greater_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._greater_ = node;
    }

    public PAdditiveExp getAdditiveExp()
    {
        return this._additiveExp_;
    }

    public void setAdditiveExp(PAdditiveExp node)
    {
        if(this._additiveExp_ != null)
        {
            this._additiveExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._additiveExp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._relationalExp_)
            + toString(this._greater_)
            + toString(this._additiveExp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._relationalExp_ == child)
        {
            this._relationalExp_ = null;
            return;
        }

        if(this._greater_ == child)
        {
            this._greater_ = null;
            return;
        }

        if(this._additiveExp_ == child)
        {
            this._additiveExp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._relationalExp_ == oldChild)
        {
            setRelationalExp((PRelationalExp) newChild);
            return;
        }

        if(this._greater_ == oldChild)
        {
            setGreater((TGreater) newChild);
            return;
        }

        if(this._additiveExp_ == oldChild)
        {
            setAdditiveExp((PAdditiveExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
