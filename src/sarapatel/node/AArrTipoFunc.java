/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AArrTipoFunc extends PTipoFunc
{
    private PTipoFunc _tipoFunc_;
    private TLBrkt _lBrkt_;
    private TRBrkt _rBrkt_;

    public AArrTipoFunc()
    {
        // Constructor
    }

    public AArrTipoFunc(
        @SuppressWarnings("hiding") PTipoFunc _tipoFunc_,
        @SuppressWarnings("hiding") TLBrkt _lBrkt_,
        @SuppressWarnings("hiding") TRBrkt _rBrkt_)
    {
        // Constructor
        setTipoFunc(_tipoFunc_);

        setLBrkt(_lBrkt_);

        setRBrkt(_rBrkt_);

    }

    @Override
    public Object clone()
    {
        return new AArrTipoFunc(
            cloneNode(this._tipoFunc_),
            cloneNode(this._lBrkt_),
            cloneNode(this._rBrkt_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArrTipoFunc(this);
    }

    public PTipoFunc getTipoFunc()
    {
        return this._tipoFunc_;
    }

    public void setTipoFunc(PTipoFunc node)
    {
        if(this._tipoFunc_ != null)
        {
            this._tipoFunc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipoFunc_ = node;
    }

    public TLBrkt getLBrkt()
    {
        return this._lBrkt_;
    }

    public void setLBrkt(TLBrkt node)
    {
        if(this._lBrkt_ != null)
        {
            this._lBrkt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lBrkt_ = node;
    }

    public TRBrkt getRBrkt()
    {
        return this._rBrkt_;
    }

    public void setRBrkt(TRBrkt node)
    {
        if(this._rBrkt_ != null)
        {
            this._rBrkt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rBrkt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tipoFunc_)
            + toString(this._lBrkt_)
            + toString(this._rBrkt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tipoFunc_ == child)
        {
            this._tipoFunc_ = null;
            return;
        }

        if(this._lBrkt_ == child)
        {
            this._lBrkt_ = null;
            return;
        }

        if(this._rBrkt_ == child)
        {
            this._rBrkt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tipoFunc_ == oldChild)
        {
            setTipoFunc((PTipoFunc) newChild);
            return;
        }

        if(this._lBrkt_ == oldChild)
        {
            setLBrkt((TLBrkt) newChild);
            return;
        }

        if(this._rBrkt_ == oldChild)
        {
            setRBrkt((TRBrkt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
