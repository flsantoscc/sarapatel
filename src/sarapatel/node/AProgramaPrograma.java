/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import java.util.*;
import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AProgramaPrograma extends PPrograma
{
    private final LinkedList<PDecVarOrConst> _decVarOrConst_ = new LinkedList<PDecVarOrConst>();
    private final LinkedList<PDecProcOrFuncao> _decProcOrFuncao_ = new LinkedList<PDecProcOrFuncao>();
    private PDecProcPrincipal _decProcPrincipal_;

    public AProgramaPrograma()
    {
        // Constructor
    }

    public AProgramaPrograma(
        @SuppressWarnings("hiding") List<?> _decVarOrConst_,
        @SuppressWarnings("hiding") List<?> _decProcOrFuncao_,
        @SuppressWarnings("hiding") PDecProcPrincipal _decProcPrincipal_)
    {
        // Constructor
        setDecVarOrConst(_decVarOrConst_);

        setDecProcOrFuncao(_decProcOrFuncao_);

        setDecProcPrincipal(_decProcPrincipal_);

    }

    @Override
    public Object clone()
    {
        return new AProgramaPrograma(
            cloneList(this._decVarOrConst_),
            cloneList(this._decProcOrFuncao_),
            cloneNode(this._decProcPrincipal_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProgramaPrograma(this);
    }

    public LinkedList<PDecVarOrConst> getDecVarOrConst()
    {
        return this._decVarOrConst_;
    }

    public void setDecVarOrConst(List<?> list)
    {
        for(PDecVarOrConst e : this._decVarOrConst_)
        {
            e.parent(null);
        }
        this._decVarOrConst_.clear();

        for(Object obj_e : list)
        {
            PDecVarOrConst e = (PDecVarOrConst) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._decVarOrConst_.add(e);
        }
    }

    public LinkedList<PDecProcOrFuncao> getDecProcOrFuncao()
    {
        return this._decProcOrFuncao_;
    }

    public void setDecProcOrFuncao(List<?> list)
    {
        for(PDecProcOrFuncao e : this._decProcOrFuncao_)
        {
            e.parent(null);
        }
        this._decProcOrFuncao_.clear();

        for(Object obj_e : list)
        {
            PDecProcOrFuncao e = (PDecProcOrFuncao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._decProcOrFuncao_.add(e);
        }
    }

    public PDecProcPrincipal getDecProcPrincipal()
    {
        return this._decProcPrincipal_;
    }

    public void setDecProcPrincipal(PDecProcPrincipal node)
    {
        if(this._decProcPrincipal_ != null)
        {
            this._decProcPrincipal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decProcPrincipal_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._decVarOrConst_)
            + toString(this._decProcOrFuncao_)
            + toString(this._decProcPrincipal_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._decVarOrConst_.remove(child))
        {
            return;
        }

        if(this._decProcOrFuncao_.remove(child))
        {
            return;
        }

        if(this._decProcPrincipal_ == child)
        {
            this._decProcPrincipal_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PDecVarOrConst> i = this._decVarOrConst_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDecVarOrConst) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<PDecProcOrFuncao> i = this._decProcOrFuncao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDecProcOrFuncao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._decProcPrincipal_ == oldChild)
        {
            setDecProcPrincipal((PDecProcPrincipal) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
