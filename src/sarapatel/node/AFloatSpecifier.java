/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AFloatSpecifier extends PFloatSpecifier
{
    private TTReal _tReal_;

    public AFloatSpecifier()
    {
        // Constructor
    }

    public AFloatSpecifier(
        @SuppressWarnings("hiding") TTReal _tReal_)
    {
        // Constructor
        setTReal(_tReal_);

    }

    @Override
    public Object clone()
    {
        return new AFloatSpecifier(
            cloneNode(this._tReal_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFloatSpecifier(this);
    }

    public TTReal getTReal()
    {
        return this._tReal_;
    }

    public void setTReal(TTReal node)
    {
        if(this._tReal_ != null)
        {
            this._tReal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tReal_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tReal_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tReal_ == child)
        {
            this._tReal_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tReal_ == oldChild)
        {
            setTReal((TTReal) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
