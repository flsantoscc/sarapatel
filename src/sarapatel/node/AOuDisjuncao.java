/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AOuDisjuncao extends PDisjuncao
{
    private PDisjuncao _disjuncao_;
    private TOu _ou_;
    private PConjuncao _conjuncao_;

    public AOuDisjuncao()
    {
        // Constructor
    }

    public AOuDisjuncao(
        @SuppressWarnings("hiding") PDisjuncao _disjuncao_,
        @SuppressWarnings("hiding") TOu _ou_,
        @SuppressWarnings("hiding") PConjuncao _conjuncao_)
    {
        // Constructor
        setDisjuncao(_disjuncao_);

        setOu(_ou_);

        setConjuncao(_conjuncao_);

    }

    @Override
    public Object clone()
    {
        return new AOuDisjuncao(
            cloneNode(this._disjuncao_),
            cloneNode(this._ou_),
            cloneNode(this._conjuncao_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOuDisjuncao(this);
    }

    public PDisjuncao getDisjuncao()
    {
        return this._disjuncao_;
    }

    public void setDisjuncao(PDisjuncao node)
    {
        if(this._disjuncao_ != null)
        {
            this._disjuncao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._disjuncao_ = node;
    }

    public TOu getOu()
    {
        return this._ou_;
    }

    public void setOu(TOu node)
    {
        if(this._ou_ != null)
        {
            this._ou_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ou_ = node;
    }

    public PConjuncao getConjuncao()
    {
        return this._conjuncao_;
    }

    public void setConjuncao(PConjuncao node)
    {
        if(this._conjuncao_ != null)
        {
            this._conjuncao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._conjuncao_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._disjuncao_)
            + toString(this._ou_)
            + toString(this._conjuncao_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._disjuncao_ == child)
        {
            this._disjuncao_ = null;
            return;
        }

        if(this._ou_ == child)
        {
            this._ou_ = null;
            return;
        }

        if(this._conjuncao_ == child)
        {
            this._conjuncao_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._disjuncao_ == oldChild)
        {
            setDisjuncao((PDisjuncao) newChild);
            return;
        }

        if(this._ou_ == oldChild)
        {
            setOu((TOu) newChild);
            return;
        }

        if(this._conjuncao_ == oldChild)
        {
            setConjuncao((PConjuncao) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
